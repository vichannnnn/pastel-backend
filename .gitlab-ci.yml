###
# On MR, we will do [builddockerforunittest, unittest]
# On Merge to dev, [deploytodev]
# On MR to Prod, [builddockerforunittest, unittest]
# On Merge to Prod, [deploytoprod]
###


stages:
  - build
  - test
  - release
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  DEV_ENV: $DEV_ENV

.on_mr_or_master:
  only:
    - merge_requests
    - master
.on_mr_or_dev:
  only:
    - merge_requests
    - develop
.on_master_only:
  only:
    - master
.on_dev_only:
  only:
    - develop

.requires_docker:
  services:
    - docker:23.0-rc-dind
  image: docker:20.10.21


docker build:
  stage: build
  extends: [.requires_docker, .on_mr_or_master]
  artifacts:
    paths:
      - ./image.tar
  before_script:
    - apk add bash make
  script:
    - make image
    - make image-export
  tags:
    - varys


quality checks:
  stage: test
  extends: [.requires_docker, .on_mr_or_master]
  dependencies: [docker build]
  variables:
    env: $DEV_ENV
  before_script:
    - apk add bash make
    - make image-import
    - echo "$DEV_ENV" > .env
  script:
    - docker compose run --rm backend pylint ./app --disable=C0114,C0115,C0116,R0903,R0913,C0411 --extension-pkg-whitelist=pydantic --load-plugins pylint_flask_sqlalchemy
    - docker compose run --rm backend mypy ./app
    - docker compose run --rm backend pytest ./app
  tags:
    - varys


publish:
  stage: release
  extends: [.requires_docker, .on_mr_or_master]
  dependencies: [docker build]
  before_script:
    - apk add bash make
    - docker login ${CI_REGISTRY} -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
  script:
    - make image-import
    - make image-publish
  after_script:
    - docker logout
  tags:
    - varys


deploy_dev:
  stage: deploy
  extends: [.on_dev_only]
  before_script:
     - echo "$DEV_SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
     - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $DEV_SSH "cd $DEV_PROJECT_PATH && git checkout develop && git pull origin develop && docker compose up -d --build && make migrate"
  tags:
    - deployment

deploy_master:
  stage: deploy
  extends: [.on_master_only]
  before_script:
     - echo "$PROD_SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
     - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $PROD_SSH "cd $PROD_PROJECT_PATH && git checkout master && git pull origin master && make buildproduction && make productionmigrate"
  tags:
    - deployment
